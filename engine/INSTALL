Speect is written in ANSI C/ISO C90 and should compile with any standards
compliant compiler, although we still need to do some extensive testing.

The bash script "clean_files" can be run to clean the build (delete the
cache and cmake makefiles) and to delete auto generated files and backup files.

To start the cmake configuration process run "cmake -i" in the speect/engine
directory. One will be prompted with configuration options, with defaults 
appearing in [] brackets, press ENTER to continue with the default value
or type in the desired value and ENTER to continue.

The first configuration option is to see the advanced cmake options, use
the default (No) for a quick configuration process. The other options and
their meanings are given below.


CMAKE_BUILD_TYPE
----------------
Options are None Debug Release RelWithDebInfo MinSizeRel and Profile. The
build type influences the C optimization and debug compilation flags.


CMAKE_INSTALL_PREFIX
--------------------
This release of Speect has not been tested with a installation path and
should not be installed ("make install"), but rather built in the source
tree and used from there. 


DEBUG_LOG_FILE
--------------
A log file where Speect will output debugging information.


ERROR_ABORT_FATAL
-----------------
Options are ON or OFF (default).
Fatal errors are errors that occur when for example memory allocation
fails. If OFF then Speect will gracefully exit and print a kind of 
back-trace to where the error occurred in the error log file. If ON
then the libc abort() function is called after logging the error
to the error log file.


ERROR_LOG_FILE
--------------
A log file where Speect will output information about errors that have
been caught.


ERROR_VERBOSE
-------------
Options are ON (default) or OFF. 
If ON then the function names, file 
names and line numbers of the caught errors will also be logged.


INI_FILE_PATH
-------------
The Speect initialization file, where simple options can be
changed.


LIB_SUFFIX
----------
Not in use.


PLUGIN_PATH
-----------
The path from where Speect will load plug-ins if the given plug-in name
does not contain a path separator ('/' or '\'). Use the default.


SAFE_CAST
---------
Options are ON (default) or OFF.
Changes the behaviour of the S_CAST macro. If ON the all Speect objects 
(SObject and it's children) casting will be type checked.


SHARED
------
Use default.


SPEECT_WRAP_PYTHON
------------------
Options are ON (default) or OFF.
Use default if you have Python and SWIG. If used then the Speect
wrapper files will be placed in the speect/swig/python directory.


STRICT_WARN
-----------
Options are ON or OFF (default).
Use default. If ON and a Release build is done then the compiler will
complain about the dynamic linking loader (on POSIX systems) function
dlsym (Issue between ANSI C/ISO C90 and POSIX standards).


SWIG_DIR
--------
The directory of your SWIG installation.
Use default.


SWIG_EXECUTABLE
---------------
Path to your SWIG executable.
Use default.


SWIG_VERSION
------------
Your SWIG installation version.
Use default.


WANT_DOCS
---------
Include documentation in the build process.
Use default, not implemented.
A doxygen configuration file (speect/engine/Doxyfile) is provided
to build the documentation.


WANT_DOCS_HTML
-------------
Include HTML documentation in the build process.
Use default, not implemented.


WANT_DOCS_PDF
------------
Include PDF documentation in the build process.
Use default, not implemented.


WANT_EXAMPLES
-------------
Options are ON or OFF (default).
Include examples in the build process.
Use default, some of the examples are broken, but they can still be of
use (speect/examples).


WANT_TESTS
----------
Options are ON or OFF (default).
Include tests in the build process.
Use default, in the future the examples will serve as unit tests.


WANT_THREADS
------------
Options are ON or OFF (default).
Enable multi threaded support.
Use default, not tested.


WARN_DECL_AFTER_STMT
--------------------
Options are ON or OFF (default).
Warn about declarations after statements (GCC)
Use default.


If no errors occurred one can build Speect with the "make" command.
